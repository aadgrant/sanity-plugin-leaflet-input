{"version":3,"sources":["../src/GeopointInput.js"],"names":["Leaflet","Icon","Default","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","EMPTY_MARKERS","DEFAULT_ZOOM","SHOW_FIELDS","DEFAULT_CENTER","clickToMove","window","matchMedia","matches","getKeyPlaceholder","url","match","key","isMissingMapboxApiKey","tileConfig","hasStaticAccessKey","test","keyPlaceholder","includes","getHelpText","value","lat","GeopointInput","React","forwardRef","props","ref","type","level","markers","onChange","typeOptions","options","leaflet","config","tileLayer","center","lng","defaultLocation","defaultZoom","zoom","setZoom","showFields","markerRef","title","description","setMarkerLocation","alt","PatchEvent","from","_type","name","parseFloat","handleMapClick","evt","latlng","handleMarkerDragEnd","current","leafletElement","getLatLng","handleUnsetMarker","onZoom","target","getZoom","leafStyles","styles","map","readOnly","helpText","inputFields","inputField","propTypes","PropTypes","shape","string","isRequired","number","func","bool","maxZoom","attribution","accessToken","arrayOf","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, {createRef, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport Leaflet from 'leaflet'\nimport {Map, TileLayer, Marker, ZoomControl, Popup} from 'react-leaflet'\nimport Button from 'part:@sanity/components/buttons/default'\nimport Fieldset from 'part:@sanity/components/fieldsets/default'\nimport {PatchEvent, set, setIfMissing, unset} from 'part:@sanity/form-builder/patch-event'\nimport config from 'config:leaflet-input'\nimport leafStyles from './Leaflet.css'\nimport styles from './GeopointInput.css'\nimport MapBoxAccessTokenMissing from './MapBoxAccessTokenMissing'\n\nLeaflet.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n})\n\nconst EMPTY_MARKERS = []\nconst DEFAULT_ZOOM = 13\nconst SHOW_FIELDS = false\nconst DEFAULT_CENTER = [37.779048, -122.415214]\n\nconst clickToMove =\n  typeof window !== 'undefined' &&\n  typeof window.matchMedia === 'function' &&\n  !matchMedia('(pointer:fine)').matches\n\nfunction getKeyPlaceholder(url) {\n  const [, key] = url.match(/access_token=\\{(.*?)\\}/) || []\n  return key\n}\n\nfunction isMissingMapboxApiKey(tileConfig) {\n  const url = tileConfig.url || ''\n  const hasStaticAccessKey = /accessToken=[^{]/.test(url)\n  const keyPlaceholder = !hasStaticAccessKey && getKeyPlaceholder(url)\n  return url.includes('tiles.mapbox.com') && keyPlaceholder && !tileConfig[keyPlaceholder]\n}\n\nfunction getHelpText(value) {\n  if (!value || !value.lat) {\n    return `Click on map to set location`\n  }\n\n  if (clickToMove) {\n    return `Click on map to change location. Click marker to remove it.`\n  }\n\n  return `Drag marker to change location. Click marker to remove it.`\n}\n\nconst GeopointInput = React.forwardRef(function GeopointInput(props, ref) {\n  const {type, level, value, markers, onChange} = props\n  const typeOptions = type.options?.leaflet || {}\n  const tileConfig = {...config.tileLayer, ...typeOptions.tileLayer}\n  const center = value && value.lat && value.lng ? value : typeOptions.defaultLocation || config.defaultLocation || DEFAULT_CENTER\n  const [zoom, setZoom] = useState(typeOptions.defaultZoom || config.defaultZoom || DEFAULT_ZOOM)\n  const showFields = typeOptions.showFields || config.showFields || SHOW_FIELDS\n  const markerRef = createRef()\n\n  if (isMissingMapboxApiKey(tileConfig)) {\n    return (\n      <Fieldset legend={type.title} description={type.description} markers={markers} label={level}>\n        <MapBoxAccessTokenMissing />\n      </Fieldset>\n    )\n  }\n\n  function setMarkerLocation ({ lat, lng, alt }) {        \n    onChange(\n      PatchEvent.from([\n        setIfMissing({\n          _type: type.name,\n        }),\n        ...(lat ? [set(parseFloat(lat), ['lat'])] : []),\n        ...(lng ? [set(parseFloat(lng), ['lng'])] : []),\n        ...(alt ? [set(parseFloat(alt), ['alt'])] : []),\n      ])\n    )\n  }\n\n  function handleMapClick(evt) {\n    if (!clickToMove && value && value.lat) {\n      return\n    }\n\n    setMarkerLocation(evt.latlng)\n  }\n\n  function handleMarkerDragEnd() {\n    if (!markerRef.current) {\n      return\n    }\n\n    setMarkerLocation(markerRef.current.leafletElement.getLatLng())\n  }\n\n  function handleUnsetMarker() {\n    onChange(PatchEvent.from(unset()))\n  }\n\n  function onZoom(evt) {\n    setZoom(evt.target.getZoom())\n  }\n\n  return (\n    <Fieldset legend={type.title} description={type.description} markers={markers} level={level}>\n      <div className={leafStyles.leaflet}>\n        <Map\n          ref={ref}\n          className={styles.map}\n          center={center}\n          zoom={zoom}\n          zoomControl={false}\n          onZoomEnd={onZoom}\n          scrollWheelZoom={false}\n          onClick={handleMapClick}\n          trackResize\n        >\n          <TileLayer {...tileConfig} />\n\n          {value && value.lat && value.lng && (\n            <Marker\n              draggable={!type.readOnly}\n              onDragend={handleMarkerDragEnd}\n              position={center}\n              ref={markerRef}\n            >\n              {!type.readOnly && (\n                <Popup>\n                  <Button color=\"danger\" inverted onClick={handleUnsetMarker}>\n                    Remove point\n                  </Button>\n                </Popup>\n              )}\n            </Marker>\n          )}\n\n          <ZoomControl position=\"topright\" />\n        </Map>\n\n        <p className={styles.helpText}>{getHelpText(value)}</p>\n      </div>\n      {showFields && (\n        <div className={styles.inputFields}>\n          <input\n            name=\"lat\"\n            className={styles.inputField + ' ' + styles.lat}\n            type=\"number\"\n            value={value && value.lat ? value.lat : ''}\n            onChange={evt => setMarkerLocation({ lat: evt.target.value })}\n          />\n          <input\n            name=\"lng\"\n            className={styles.inputField + ' ' + styles.lng}\n            type=\"number\"\n            value={value && value.lng ? value.lng : ''}\n            onChange={evt => setMarkerLocation({ lng: evt.target.value })}\n          />\n          <input\n            name=\"alt\"\n            className={styles.inputField + ' ' + styles.alt}\n            type=\"number\"\n            value={value && value.alt ? value.alt : ''}\n            onChange={evt => setMarkerLocation({ alt: evt.target.value })}\n          />\n        </div>\n      )}\n    </Fieldset>\n  )\n})\n\nGeopointInput.propTypes = {\n  value: PropTypes.shape({\n    _type: PropTypes.string.isRequired,\n    lat: PropTypes.number,\n    lng: PropTypes.number,\n  }),\n  level: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    readOnly: PropTypes.bool,\n    options: PropTypes.shape({\n      leaflet: PropTypes.shape({\n        tileLayer: PropTypes.shape({\n          url: PropTypes.string.isRequired,\n          maxZoom: PropTypes.number,\n          attribution: PropTypes.string,\n          accessToken: PropTypes.string,\n        }),\n        defaultLocation: PropTypes.shape({\n          lat: PropTypes.number,\n          lng: PropTypes.number,\n        }),\n        defaultZoom: PropTypes.number,\n      }),\n    }),\n  }).isRequired,\n  markers: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.string,\n    })\n  ),\n}\n\nGeopointInput.defaultProps = {\n  value: undefined,\n  markers: EMPTY_MARKERS,\n}\n\nexport default GeopointInput\n"],"file":"GeopointInput.js"}